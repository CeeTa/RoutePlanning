$(document).ready(function () { var t; var o, e = []; function n(e, n) { var u = [], S = []; r = []; var p = { RouteID: "", SubRouteID: "", SubRouteName: "", StationID: "", StationName: "", StationSequence: "", StartPoint: null, EndPoint: null, OriginWKT: "", EncodedDirectionPolyline: "", Instruction: "", DistanceDif: "", Direction: "" }, f = new Object, h = new Object; for (z = 0; z < 3; z++) $.each(n[z], function (t, o) { var e = o, i = ""; 0 == z ? i = "https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/City/Taipei?$select=RouteID%2CSubRouteID%2CSubRouteName%2CStops&$filter=Stops%2Fany(d%3Ad%2FStationID%20eq%20'" + e + "')&$format=JSON" : 1 == z ? i = "https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/City/NewTaipei?$select=RouteID%2CSubRouteID%2CSubRouteName%2CStops&$filter=Stops%2Fany(d%3Ad%2FStationID%20eq%20'" + e + "')&$format=JSON" : 2 == z && (i = "https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/InterCity?$select=RouteID%2CSubRouteID%2CSubRouteName%2CStops&$filter=Stops%2Fany(d%3Ad%2FStationID%20eq%20'" + e + "')&$format=JSON"), $.ajax({ type: "GET", url: i, async: !1, contentType: "application/json; charset=utf-8", headers: a(), success: function (t) { $.each(t, function (t, o) { if (0 == S.includes(o.RouteID)) { S.push(o.RouteID); var i = ""; 0 == z ? i = "https://ptx.transportdata.tw/MOTC/v2/Bus/Shape/City/Taipei?$select=Geometry&$filter=RouteID%20eq%20'" + o.RouteID + "'&$format=JSON" : 1 == z ? i = "https://ptx.transportdata.tw/MOTC/v2/Bus/Shape/City/NewTaipei?$select=Geometry&$filter=RouteID%20eq%20'" + o.RouteID + "'&$format=JSON" : 2 == z && (i = ""), $.ajax({ type: "GET", url: i, async: !1, contentType: "application/json; charset=utf-8", headers: a(), success: function (t) { f[o.RouteID] = t[0].Geometry } }) } var n = o.SubRouteID + "_" + o.Direction; 0 == u.includes(n) && (u.push(n), h[n] = o.Stops); var s = Object.create(p); s.RouteID = o.RouteID, s.SubRouteID = o.SubRouteID, s.SubRouteName = o.SubRouteName.Zh_tw, s.StationID = e, s.OriginWKT = f[o.RouteID], s.Direction = o.Direction, $.each(o.Stops, function (t, o) { o.StationID == s.StationID && (s.StationName = o.StopName.Zh_tw, s.StationSequence = o.StopSequence) }), r.push(s) }) } }) }); for ($.each(r, function (t, o) { var e = o.StationSequence, i = o.SubRouteID + "_" + o.Direction, n = h[i].length, a = h[i][n - 1].StopSequence, s = [], c = []; if (1 != e && e != a) { i = o.SubRouteID + "_" + o.Direction; $.each(h[i], function (o, i) { e - 1 == i.StopSequence ? (s[0] = i.StopPosition.PositionLon, s[1] = i.StopPosition.PositionLat, r[t].StartPoint = s) : e + 1 == i.StopSequence && (c[0] = i.StopPosition.PositionLon, c[1] = i.StopPosition.PositionLat, r[t].EndPoint = c) }) } }), i = r.length - 1; i >= 0; i--) null != r[i].StartPoint && null != r[i].EndPoint || (console.log("[Error]SubRouteID:" + r[i].SubRouteID + ", which StationSequence:" + r[i].StationSequence + ", StartPoint:" + r[i].StartPoint + ", EndPoint:" + r[i].EndPoint), r.splice(i, 1)); function m(t, o) { return t.StationSequence < o.StationSequence ? -1 : t.StationSequence > o.StationSequence ? 1 : 0 } $("#dialog-modal tbody").html(""), r.sort(function (t, o) { return t.SubRouteID < o.SubRouteID ? -1 : t.SubRouteID > o.SubRouteID ? 1 : 0 }); var b = []; $.each(u, function (t, o) { var e = []; $.each(r, function (t, i) { o == i.SubRouteID + "_" + i.Direction && e.push(i) }), e.sort(m); var i = null, n = 0; for (j = 0; j < e.length; j++) 1 == e.length ? b.push(e[0]) : 0 == j ? (i = e[0], n = e[0].StationSequence) : (e[j].StationSequence - 1 == n ? (i.StationName += "," + e[j].StationName, i.StationID += "," + e[j].StationID, i.StationSequence += "," + e[j].StationSequence, i.EndPoint = e[j].EndPoint, n = e[j].StationSequence) : (b.push(i), i = e[j], n = e[j].StationSequence), j == e.length - 1 && b.push(i)) }), console.log(b), $.each(b, function (t, o) { var i = '{"avoid_features": "tracks","avoid_polygons":{"type":"Polygon","coordinates":[[', n = ""; $.each(e, function (t, o) { t % 10 == 2 ? (i += "[" + o.lng + "," + o.lat + "],", ",[" + o.lat + "," + o.lng + "]") : 0 == t && (n = "[" + o.lng + "," + o.lat + "]", i += n + ",", "[" + o.lat + "," + o.lng + "]") }), function (t, o) { try { var e = "https://api.openrouteservice.org/directions", i = t.StartPoint[0] + "," + t.StartPoint[1], n = t.EndPoint[0] + "," + t.EndPoint[1]; e += "?api_key=5b3ce3597851110001cf6248d2f8ecea2f184ec88c3e853ce544667c&coordinates=" + i + "|" + n + "&profile=driving-car&options=" + o; var a = ""; $.ajax({ type: "GET", url: e, async: !1, contentType: "application/json; charset=utf-8", success: function (o) { a = o.routes[0].geometry, t.EncodedDirectionPolyline = a; var e = ""; $.each(o.routes[0].segments[0].steps, function (t, o) { 0 == t ? e += o.name : 0 != t && "" != o.name && (e += "→" + o.name) }); var i, n, r, c, u, l, d, S = (i = t.StartPoint[1], n = t.StartPoint[0], r = t.EndPoint[1], c = t.EndPoint[0], u = s(r - i), l = s(c - n), d = Math.sin(u / 2) * Math.sin(u / 2) + Math.cos(s(i)) * Math.cos(s(r)) * Math.sin(l / 2) * Math.sin(l / 2), 6371 * (2 * Math.atan2(Math.sqrt(d), Math.sqrt(1 - d)))), p = o.routes[0].summary.distance - 1e3 * S; return t.Instruction = e, t.DistanceDif = p.toFixed(3), t } }) } catch (t) { console.log(t) } }(o, i += n + "]]}}"); var a = (parseInt(o.DistanceDif) / 2e4 * 60).toFixed(1); a < 1 && (_timeDIff = "小於一分鐘"); var r = ""; 0 == o.Direction ? r = o.SubRouteName + "(去程)" : 1 == o.Direction && (r = o.SubRouteName + "(返程)"), "" == o.Instruction || $("#dialog-modal tbody").append("<tr id=tableRow_" + t + "><td>" + r + "</td><td>" + o.StationName + "</td><td>" + o.Instruction + "</td><td>" + o.DistanceDif + "</td><td>" + a + "</td></tr>") }), $("#dialog-modal tbody tr").click(function (o) { null != l && t.removeLayer(l), null != d && t.removeLayer(d); var e, i, n = o.currentTarget.id.split("_")[1]; try { l = function (o) { var e = new Wkt.Wkt; e.read(o); var i = []; return $.each(e.components, function (t, o) { var e = []; e[0] = o.y, e[1] = o.x, i.push(e) }), L.polyline(i, { color: "yellow" }).addTo(t) }(b[n].OriginWKT) } catch (o) { } e = b[n].EncodedDirectionPolyline, i = L.polyline(L.PolylineUtil.decode(e, 5), { color: "red" }).addTo(t), t.fitBounds(i.getBounds()), d = i }), $("#btnDraw").removeClass("selected"), $(".loader").css("visibility", "hidden"), $("#btnSubmit").addClass("disabled"), o.disable(), c = !1, function () { try { $("#dialog-modal").dialog("close") } catch (t) { } $("#dialog-modal").dialog({ maxHeight: 400, width: 800, closeOnEscape: !1, modal: !0, buttons: { Save: function () { var t = new Blob([$("#dialog-modal").html()], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" }); return saveAs(t, "Report.xls"), !1 } } }).dialogExtend({ maximizable: !1, minimizable: !0, minimize: function (t, o) { $("#dialog-extend-fixed-container .ui-dialog").css("width", "300px") } }), $(".ui-dialog-buttonpane").find('button:contains("Save")').html("").prepend('<span class="glyphicon glyphicon-floppy-save"></span>').css("position", "absolute").css("right", "0.5%").css("bottom", "0.5%").css("background-color", "#fff").css("border", "1px solid transparent").css("border-color", "#ccc").css("border-radius", "6px").css("width", "25px").attr("title", "下載"), $(".ui-dialog-titlebar-minimize").attr("title", "縮小"), $(".ui-dialog-titlebar-maximize").attr("title", "放大"), $(".ui-dialog-titlebar-close").attr("title", "關閉"), $(".ui-dialog-titlebar-restore .ui-icon").attr("title", "還原"), $("#dialog-modal").show() }() } function a() { var t = (new Date).toGMTString(), o = new jsSHA("SHA-1", "TEXT"); return o.setHMACKey("AYlzlwsYEA8gamqCwxy8Pg2cc38", "TEXT"), o.update("x-date: " + t), { Authorization: 'hmac username="6fa41fdd4768445796e6616251609648", algorithm="hmac-sha1", headers="x-date", signature="' + o.getHMAC("B64") + '"', "X-Date": t } } function s(t) { return t * (Math.PI / 180) } !function () { t = new L.Map("map", { preferCanvas: !0 }); var o = new L.TileLayer("http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png", { minZoom: 8, maxZoom: 19, attribution: 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors' }); t.setView(new L.LatLng(25.037566, 121.564431), 16), t.addLayer(o) }(), $.ajax({ type: "GET", url: "https://ptx.transportdata.tw/MOTC/v2/Bus/Station/City/Taipei?$select=StationUID%2CStationID%2CStationName%2CStationAddress%2CStationPosition&$format=JSON", contentType: "application/json; charset=utf-8", headers: a(), success: function (o) { $.each(o, function (o, i) { var n = L.circle([i.StationPosition.PositionLat, i.StationPosition.PositionLon], { color: "#ffbd9d", fillColor: "#ffbd9d", fillOpacity: .9, radius: 5 }).addTo(t); n.bindTooltip(i.StationName.Zh_tw + "<br>" + i.StationAddress, { direction: "top", offset: [0, -5] }); var a = { UID: i.StationUID, ID: i.StationID, X: i.StationPosition.PositionLon, Y: i.StationPosition.PositionLat }; e.push(a) }) } }), $.ajax({ type: "GET", url: "https://ptx.transportdata.tw/MOTC/v2/Bus/Station/City/NewTaipei?$select=StationUID%2CStationID%2CStationName%2CStationAddress%2CStationPosition&$format=JSON", contentType: "application/json; charset=utf-8", headers: a(), success: function (o) { $.each(o, function (o, i) { var n = L.circle([i.StationPosition.PositionLat, i.StationPosition.PositionLon], { color: "#fff4c1", fillColor: "#fff4c1", fillOpacity: .9, radius: 5 }).addTo(t); n.bindTooltip(i.StationName.Zh_tw + "<br>" + i.StationAddress, { direction: "top", offset: [0, -5] }); var a = { UID: i.StationUID, ID: i.StationID, X: i.StationPosition.PositionLon, Y: i.StationPosition.PositionLat }; e.push(a) }) } }), $.ajax({ type: "GET", url: "https://ptx.transportdata.tw/MOTC/v2/Bus/Station/InterCity?$select=StationUID%2CStationID%2CStationName%2CStationPosition&$format=JSON", contentType: "application/json; charset=utf-8", headers: a(), success: function (o) { $.each(o, function (o, i) { var n = L.circle([i.StationPosition.PositionLat, i.StationPosition.PositionLon], { color: "#97cbff", fillColor: "#97cbff", fillOpacity: .9, radius: 5 }).addTo(t); n.bindTooltip(i.StationName.Zh_tw, { direction: "top", offset: [0, -5] }); var a = { UID: i.StationUID, ID: i.StationID, X: i.StationPosition.PositionLon, Y: i.StationPosition.PositionLat }; e.push(a) }) } }); var r, c = !1; $("#btnDraw").click(function () { 0 == $("#btnDraw").hasClass("selected") ? ($("#btnDraw").addClass("selected"), o = t.selectAreaFeature.enable(), c = !0) : ($("#btnDraw").removeClass("selected"), o.disable(), c = !1) }), $("#btnClear").click(function () { o.removeAllArea(), null != l && t.removeLayer(l), null != d && t.removeLayer(d), $("#btnClear").addClass("disabled"), $("#btnSubmit").addClass("disabled") }), $("#btnSubmit").click(function () { 1 == c && ($(".loader").css("visibility", "visible"), setTimeout(function () { var t = L.polygon(u, { color: "blue" }).toGeoJSON(), o = L.geoJson(t), i = [], a = [], s = [], r = []; $.each(e, function (t, e) { var i = []; i[0] = e.X, i[1] = e.Y, leafletPip.pointInLayer(i, o).length > 0 && (_stationID = e.ID, _stationUID = e.UID, _substring = _stationUID.substring(0, 3), "TPE" == _substring ? a.push(_stationID) : "NWT" == _substring ? s.push(_stationID) : "THB" == _substring && r.push(_stationID)) }), i.push(a), i.push(s), i.push(r), console.log(i), 0 == i.length ? ($(".loader").css("visibility", "hidden"), alert("無框選到任何站位!")) : n(u, i) }, 50)) }), $("#map").mousedown(function () { 1 == c && o.removeAllArea() }); var u, l = null, d = null; $("#map").mouseup(function () { 1 == c && (u = o.getAreaLatLng(), $("#btnClear").removeClass("disabled"), $("#btnSubmit").removeClass("disabled")) }) });